{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"base.js","sourcesContent":["(function utils($) {\n    /**\n     * Splits and normalizes the given url into hostname, pathname, query string\n     * and fragment.\n     *\n     * @param string url\n     * @return Object Null or an object with structure as follows:\n     * {\n     *     hostname,\n     *     pathname,\n     *     queryString,\n     *     fragment\n     * }\n     */\n    $.parseURL = function (url) {\n        var urlRegex = /^(?:https?:\\/\\/)?([A-Za-z0-9.-]+\\.[A-Za-z]+)?(\\/?[^?#\\s]+)?(?:\\?([^#]+)?)?(?:#(.*))?$/;\n        var matches = url.match(urlRegex);\n        if (!matches) {\n            return null;\n        }\n\n        var parts = {\n            hostname: matches[1] ? matches[1] : window.location.hostname,\n            pathname: matches[2] ? matches[2] : window.location.pathname,\n            queryString: matches[3] ? matches[3] : '',\n            fragment: matches[4] ? matches[4] : ''\n        };\n\n        // Process relative pathnames\n        if (parts.pathname[0] !== '/')\n        {\n            // Append current pathname to the specified pathname\n            var prefix = window.location.pathname;\n            prefix = prefix[prefix.length - 1] === '/' ? prefix : (prefix+'/');\n            parts.pathname = prefix + parts.pathname;\n        }\n\n        // Make sure pathname ends with a '/'\n        if (parts.pathname[parts.pathname.length - 1] !== '/')\n        {\n            parts.pathname += '/';\n        }\n\n        return parts;\n    };\n\n    /**\n     * Scrolls window to the put given element on top of the page.\n     *\n     * @param jQueryCollection $el\n     * @param int duration\n     */\n    $.scrollWindowTo = function ($el, duration, easing, callback, respectHeader) {\n        duration = typeof(duration) !== 'number' ? 1000 : duration;\n        easing = typeof(easing) !== 'string' || easing === '' ? 'swing' : easing;\n        callback = typeof(callback) !== 'function' ? (function () {}) : callback;\n        respectHeader = typeof(respectHeader) === 'boolean' ? respectHeader : true;\n\n        $('html, body').animate({\n            scrollTop: $el.offset().top - (respectHeader ? $('.js-site-header').outerHeight() : 0)\n        }, duration, easing, callback);\n    };\n\n    /**\n     * Checks if email address is valid. Regex is taken from:\n     * http://jsfiddle.net/ghvj4gy9/embedded/result,js/ as pointed by:\n     * http://stackoverflow.com/a/46181\n     */\n    $.validateEmail = function (email) {\n        var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return emailRegex.test(email);\n    };\n})(jQuery);\n"],"sourceRoot":"/source/"}